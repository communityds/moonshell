#!/usr/bin/env bash
#
# Get/Set a value from/to an AWS::SecretsManager::Secret entity
#

source $(dirname $0)/../moon.sh

BASENAME=$(basename $0)

ACTION=${BASENAME##*-}
ACTIONS=(get set)

if ! contains ${ACTION} ${ACTIONS[@]}; then
    echoerr "FATAL: Unsupported action: ${ACTION}"
    exit 255
fi

if [[ $# -lt 1 ]]; then
    echoerr "Usage: ${BASENAME} ENVIRONMENT [LOGICAL_RESOURCE_ID]"
    exit
else
    export ENVIRONMENT=$1
    export LOGICAL_RESOURCE_ID=${2-}
fi

stack_name

if [[ -z ${LOGICAL_RESOURCE_ID-} ]]; then
    RESOURCE_TYPE="AWS::SecretsManager::Secret"
    echoerr "INFO: Gathering all stack secrets"
    SECRET_RESOURCE_IDS=($(stack_resource_type_name ${STACK_NAME} ${RESOURCE_TYPE}))
    if [[ ${SECRET_RESOURCE_IDS[@]-} ]]; then
        echo "Choose a secret to ${ACTION}:"
        LOGICAL_RESOURCE_ID=$(choose ${SECRET_RESOURCE_IDS[@]})
    else
        exit 1
    fi
fi

PHYSICAL_RESOURCE_ID=$(stack_resource_id ${STACK_NAME} ${LOGICAL_RESOURCE_ID})

if [[ ${ACTION} == get ]]; then
    aws secretsmanager get-secret-value --secret-id ${PHYSICAL_RESOURCE_ID}
elif [[ ${ACTION} == set ]]; then
    read -s -p "Input secret string: " SECRET_STRING

    if [[ -z ${SECRET_STRING-} ]]; then
        echoerr "ERROR: Can not set an empty string"
        exit 1
    fi

    aws secretsmanager put-secret-value --secret-id ${PHYSICAL_RESOURCE_ID} --secret-string "${SECRET_STRING}"
fi
