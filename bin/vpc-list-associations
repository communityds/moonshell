#!/usr/bin/env bash
#
# This script lists all associations to and from a VPC.
#

source $(dirname $0)/../moon.sh

usage () {
    echoerr "Usage: $(basename $0) ENVIRONMENT"
    exit
}

#
# INPUT
#
if [[ $# -lt 1 ]]; then
    usage
else
    export ENVIRONMENT=$1
fi

stack_name

#
# MAIN
#
echoerr "INFO: Setting ${STACK_NAME} variables"
VPC_ID=$(stack_value_output ${STACK_NAME} "VPCId")
VPC_NETWORK=$(stack_value_parameter ${STACK_NAME} "VPCNetwork")
VPC_ROUTE_TABLE=$(stack_value_output ${STACK_NAME} "RouteTableId")

echoerr "INFO: Peering connections requested by ${VPC_ID}"
REQUESTER_CONNECTIONS=($(vpc_peers_from_requester ${VPC_ID}))
echoerr
for ((i = 0; i < ${#REQUESTER_CONNECTIONS[@]}; i += 1)); do
    echoerr "  ${i}: ${REQUESTER_CONNECTIONS[$i]} $(aws ec2 describe-vpc-peering-connections \
        --region ${AWS_REGION} \
        --vpc-peering-connection-ids ${REQUESTER_CONNECTIONS[$i]} \
        --query "VpcPeeringConnections[].Tags[?Key=='destination_stack'].Value" \
        --output text)"
done

echoerr
echoerr "INFO: Peering connections accepted by ${VPC_ID}"
echoerr
ACCEPTER_CONNECTIONS=($(vpc_peers_to_accepter ${VPC_ID}))
for ((i = 0; i < ${#ACCEPTER_CONNECTIONS[@]}; i += 1)); do
    echoerr "  ${i}: ${ACCEPTER_CONNECTIONS[$i]} $(aws ec2 describe-vpc-peering-connections \
        --region ${AWS_REGION} \
        --vpc-peering-connection-ids ${ACCEPTER_CONNECTIONS[$i]} \
        --query "VpcPeeringConnections[].Tags[?Key=='source_stack'].Value" \
        --output text)"
done
echoerr

