#!/usr/bin/env bash
#
# Download a named or chosen log file
#

source $(dirname $0)/../moon.sh

if [[ $# -lt 1 ]]; then
    echoerr "Usage: $(basename $0) ENVIRONMENT [OPTIONS]"
    echoerr
    echoerr "Options:"
    echoerr "  -f   Log file for 'startswith' match. Default: enumerate all logs for user choice"
    echoerr "  -o   Output file. Default: /tmp/\$STACK_NAME.slowlog"
    echoerr "  -r   Use the replica: Default: undefined"
    echoerr
    echoerr "Example:"
    echoerr "  $ $(basename $0) dev -o /tmp/foo.log"
    echoerr "  $ $(basename $0) uat -f slowquery/mysql-slowquery.log.2025-05-22.12 -r"
    echoerr "  $ $(basename $0) production00 -f slowquery/mysql-slowquery.log.2025-05-22"
    echoerr "  $ $(basename $0) production01 -f slowquery/mysql-slowquery.log.2025-05"
    exit 0
else
    ENVIRONMENT=$1
    shift
fi

stack_name
OUT_FILE="/tmp/${STACK_NAME}.slowlog"

while getopts ':f:o:r' OPT; do
    case "${OPT}" in
        f)  LOG_FILE=${OPTARG} ;;
        o)  if [[ -d $(dirname ${OPTARG}) ]]; then
                OUT_FILE="$(realpath ${OPTARG})"
            else
                echoerr "ERROR: Not a directory '$(dirname ${OPTARG})'"
                exit 1
            fi ;;
        r) REPLICA=true ;;
        # Handle erroneous input
        \?)
            echoerr "ERROR: Unexpected option -${OPTARG}";
            usage
            ;;
        :)
            echoerr "ERROR: Option -${OPTARG} requires an argument."
            usage
            ;;
    esac
done

if [[ -z ${LOG_FILE-} ]]; then
    echoerr "INFO: Enumerating available log files"
    LOG_FILE=$(choose $(rds_log_files ${STACK_NAME}))
fi

echoerr "INFO: Downloading log(s) matching: ${LOG_FILE}"
echoerr "INFO: Outputting log(s) to: ${OUT_FILE}"

rds_log_download ${STACK_NAME} ${LOG_FILE} ${OUT_FILE} ${REPLICA-}

